name: main

on:
  push:
    branches:
      - 'main'

env:
  CARGO_TERM_COLOR: always

jobs:
  changes:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      deps: ${{ steps.filter.outputs.deps }}
      code: ${{ steps.filter.outputs.code }}
      shell: ${{ steps.filter.outputs.shell }}
      workflows: ${{ steps.filter.outputs.workflows }}
      yml: ${{ steps.filter.outputs.yml }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            deps:
              - "Cargo.toml"
              - "Cargo.lock"
              - "deny.toml"
              - ".github/workflows/main.yml"
            code:
              - ".sqlx/**"
              - "migrations/**"
              - "src/**"
              - "tests/**"
              - "**/*.rs"
              - Cargo.*
              - clippy.toml
              - dist-workspace.toml
              - rust-toolchain.toml
              - ".github/actions/**/*.yml"
              - ".github/workflows/main.yml"
            shell:
              - "**.sh"
              - ".github/workflows/main.yml"
            workflows:
              - ".github/**/*.yml"
            yml:
              - "**.yml"
              - "**.yaml"

  lint:
    needs: changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    runs-on: ubuntu-latest
    env:
      SQLX_OFFLINE: true
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy, rustfmt
      - name: Check formatting
        run: cargo fmt --all -- --check
      - name: Lint
        run: cargo clippy

  build:
    needs: changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      SQLX_OFFLINE: true
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Build
        run: cargo build

  test:
    needs: changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    env:
      SQLX_VERSION: 0.8.3
      SQLX_FEATURES: sqlite
      DATABASE_URL: sqlite://testdb/db.db
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Install sqlx-cli
        run: cargo install sqlx-cli --version=${{ env.SQLX_VERSION }} --features ${{ env.SQLX_FEATURES }} --no-default-features --locked
      - name: Create test database
        run: |
          mkdir testdb
          cargo sqlx database create
          cargo sqlx migrate run
          cargo sqlx prepare --check
      - name: Run tests
        run: cargo test

  back-compat:
    needs: changes
    if: ${{ needs.changes.outputs.code == 'true' }}
    runs-on: ubuntu-latest
    env:
      SQLX_OFFLINE: true
    steps:
      - name: Install rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - run: git checkout HEAD~1
      - name: Build last commit
        run: cargo build --target-dir /var/tmp/last
      - name: Save bookmarks with bmm on last commit
        run: /var/tmp/last/debug/bmm save https://github.com/dhth/bmm
      - run: git checkout main
      - name: Build head
        run: cargo build --target-dir /var/tmp/head
      - name: Run bmm on head
        run: /var/tmp/head/debug/bmm list -f json

  lint-sh:
    needs: changes
    if: ${{ needs.changes.outputs.shell == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dhth/composite-actions/.github/actions/lint-sh@main

  lint-workflows:
    needs: changes
    if: ${{ needs.changes.outputs.workflows == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dhth/composite-actions/.github/actions/lint-actions@main

  lint-yaml:
    needs: changes
    if: ${{ needs.changes.outputs.yml == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dhth/composite-actions/.github/actions/lint-yaml@main

  audit:
    needs: changes
    if: ${{ needs.changes.outputs.deps == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: dhth/composite-actions/.github/actions/cargo-deny@main
